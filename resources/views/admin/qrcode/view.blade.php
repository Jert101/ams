@extends('layouts.admin-app')

@section('content')
<div class="container mx-auto px-4 py-6">
    <div class="flex flex-col sm:flex-row items-center justify-between mb-6">
        <h1 class="text-2xl font-bold text-red-700 mb-4 sm:mb-0">User QR Code</h1>
        <div class="flex flex-wrap gap-2 button-container">
            <a href="{{ route('admin.qrcode.manage') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded w-full sm:w-auto text-center">
                Back to List
            </a>
            <a href="{{ route('admin.qrcode.print', $user->user_id) }}" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded w-full sm:w-auto text-center">
                Print QR Code
            </a>
        </div>
    </div>
    
    <div class="bg-white shadow-md rounded-lg p-6 max-w-xl mx-auto">
        <div class="flex flex-col sm:flex-row items-center mb-6">
            <div class="flex-shrink-0 h-16 w-16 mb-4 sm:mb-0">
                <img class="h-16 w-16 rounded-full" src="{{ $user->profile_photo_url ?? asset('img/defaults/user.svg') }}" alt="{{ $user->name }}">
            </div>
            <div class="ml-0 sm:ml-6 text-center sm:text-left">
                <h2 class="text-xl font-bold text-gray-800 auto-text-size" data-max-size="text-xl" data-min-size="text-base">{{ $user->name }}</h2>
                <p class="text-gray-600" style="word-break: break-all; font-size: 14px; line-height: 1.3;">{{ $user->email }}</p>
                <p class="text-sm text-gray-500">User ID: {{ $user->user_id }}</p>
                <p class="text-sm text-gray-500">Role: {{ $user->role->name ?? 'No Role' }}</p>
            </div>
        </div>
        
        <div class="mb-6">
            <div id="qrcode-container" class="flex justify-center qr-image-container"></div>
        </div>
        
        <div class="text-center">
            <p class="text-gray-700 mb-2">QR Code: <span class="font-mono overflow-auto break-all text-xs sm:text-sm">{{ $user->qrCode->code }}</span></p>
            @if($user->qrCode->last_used_at)
                <p class="text-sm text-gray-500">Last used: {{ $user->qrCode->last_used_at->format('M d, Y h:i A') }}</p>
            @else
                <p class="text-sm text-gray-500">Never used</p>
            @endif
            <p class="text-sm text-gray-500 mt-2 italic">Note: QR codes have no expiration date and can only be generated by the user.</p>
        </div>
        
        <div class="mt-6 flex flex-wrap justify-center gap-3 button-container">
            <button id="download-qr" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded w-full sm:w-auto">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                </svg>
                Download QR Code
            </button>
            <button id="print-qr" class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded w-full sm:w-auto">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
                </svg>
                Print QR Code
            </button>
            <a href="{{ route('admin.qrcode.print', $user->user_id) }}" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-full sm:w-auto text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
                View ID Card
            </a>
        </div>
    </div>
</div>

@push('scripts')
<script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Generate QR code with responsive sizing
        const qrCodeContainer = document.getElementById('qrcode-container');
        
        // Determine QR code size based on screen width
        let qrSize = 200; // Default size
        if (window.innerWidth < 640) {
            qrSize = Math.min(window.innerWidth - 100, 200); // Responsive but not too small
        }
        
        const qrCode = new QRCode(qrCodeContainer, {
            text: "{{ $user->qrCode->code }}",
            width: qrSize,
            height: qrSize,
            colorDark: "#000000",
            colorLight: "#ffffff",
            correctLevel: QRCode.CorrectLevel.H
        });
        
        // Handle window resize for responsiveness
        window.addEventListener('resize', function() {
            adjustLayout();
        });
        
        // Initial layout adjustment
        adjustLayout();
        
        function adjustLayout() {
            // Adjust QR code container if needed
            if (window.innerWidth < 640) {
                const containerWidth = Math.min(window.innerWidth - 100, 200);
                qrCodeContainer.style.width = containerWidth + 'px';
                qrCodeContainer.style.height = containerWidth + 'px';
            } else {
                qrCodeContainer.style.width = '200px';
                qrCodeContainer.style.height = '200px';
            }
        }
        
        // Download function
        document.getElementById('download-qr').addEventListener('click', function() {
            const canvas = document.querySelector("#qrcode-container canvas");
            const link = document.createElement('a');
            link.download = 'qrcode-{{ $user->user_id }}.png';
            link.href = canvas.toDataURL('image/png');
            link.click();
        });
        
        // Print function
        document.getElementById('print-qr').addEventListener('click', function() {
            window.print();
        });
        
        // Automatically adjust font size based on content
        function adjustTextSizes() {
            const elements = document.querySelectorAll('.auto-text-size');
            elements.forEach(element => {
                const maxSize = element.getAttribute('data-max-size') || 'text-xl';
                const minSize = element.getAttribute('data-min-size') || 'text-base';
                
                // Reset to maximum size first
                element.classList.remove('text-base', 'text-lg', 'text-xl');
                element.classList.add(maxSize);
                
                // Check if text is overflowing
                if (element.scrollWidth > element.clientWidth) {
                    element.classList.remove(maxSize);
                    element.classList.add('text-lg');
                    
                    // Check again, if still overflowing, use minimum size
                    if (element.scrollWidth > element.clientWidth) {
                        element.classList.remove('text-lg');
                        element.classList.add(minSize);
                    }
                }
            });
        }
        
        // Run on load and on resize
        adjustTextSizes();
        window.addEventListener('resize', adjustTextSizes);
    });
</script>
<style>
    /* Ensure text overflow handling */
    .truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }
    
    /* For QR code text */
    .break-all {
        word-break: break-all;
    }
    
    /* Force email to break and wrap */
    .email-field {
        word-break: break-all !important;
        overflow-wrap: break-word !important;
        white-space: normal !important;
        font-size: 14px !important;
        max-width: 100% !important;
        display: block !important;
    }
    
    /* QR code responsiveness */
    .qr-image-container {
        max-width: 100%;
        margin: 0 auto;
    }
    
    .qr-image-container img, 
    .qr-image-container canvas {
        max-width: 100%;
        height: auto;
        margin: 0 auto;
    }
    
    /* Button container styling */
    .button-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    @media (max-width: 640px) {
        .button-container {
            justify-content: center;
        }
    }
    
    @media print {
        body * {
            visibility: hidden;
        }
        .container, .container * {
            visibility: visible;
        }
        .container {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }
        #qrcode-container {
            width: 100%;
            display: flex;
            justify-content: center;
        }
        
        .button-container {
            display: none !important;
        }
    }
    
    /* Responsive improvements */
    @media (max-width: 640px) {
        .flex-col {
            align-items: center;
        }
        
        .font-mono {
            font-size: 0.75rem;
        }
    }
</style>
@endpush
@endsection 